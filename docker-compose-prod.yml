services:
  backend:
    build:
      context: ./backend
      args:
        - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - media-files:/app/media
    command: >
      sh -c "python manage.py migrate_schemas --shared &&
              python manage.py create_public_tenant &&
              python manage.py loaddata initial_units.json &&
              daphne -b 0.0.0.0 -p 8000 app.asgi:application"
    env_file:
      - ./.env
      - ./backend/.env
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - prod-db-data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_DNS_URL=${BACKEND_URL}
        - VITE_BACKEND_PREFIX=${BACKEND_PREFIX}
    volumes:
      - frontend-dist:/app/dist # Use a named volume for the build output
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/letsencrypt
      - frontend-dist:/usr/share/nginx/html
      - media-files:/usr/share/nginx/media
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./ssl:/etc/letsencrypt
    depends_on:
      - nginx

volumes:
  prod-db-data:
  frontend-dist:
  media-files:
