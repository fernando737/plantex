# Generated by Django 4.2 on 2025-09-08 00:29

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BOMTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nombre de la plantilla BOM', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada')),
                ('total_cost_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costo total calculado en COP', max_digits=12)),
            ],
            options={
                'verbose_name': 'Plantilla BOM',
                'verbose_name_plural': 'Plantillas BOM',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EndProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nombre del producto final', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del producto')),
                ('bom_cost_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costo BOM en COP', max_digits=12)),
                ('additional_costs_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costos adicionales totales en COP', max_digits=12)),
                ('total_cost_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costo total calculado en COP', max_digits=12)),
                ('produced_quantity', models.PositiveIntegerField(default=0, help_text='Cantidad ya producida (inventario simple)')),
                ('bom_template', models.ForeignKey(help_text='Plantilla BOM asociada', on_delete=django.db.models.deletion.PROTECT, related_name='end_products', to='core.bomtemplate')),
            ],
            options={
                'verbose_name': 'Producto Final',
                'verbose_name_plural': 'Productos Finales',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Input',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nombre del insumo', max_length=200)),
                ('input_type', models.CharField(choices=[('raw_material', 'Materia Prima'), ('service', 'Servicio')], help_text='Tipo de insumo', max_length=20)),
            ],
            options={
                'verbose_name': 'Insumo',
                'verbose_name_plural': 'Insumos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductionBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nombre del presupuesto', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descripción del presupuesto')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('approved', 'Aprobado'), ('in_progress', 'En Progreso'), ('completed', 'Completado')], default='draft', help_text='Estado del presupuesto', max_length=20)),
                ('total_budget_cop', models.DecimalField(decimal_places=2, default=0, help_text='Presupuesto total calculado en COP', max_digits=15)),
            ],
            options={
                'verbose_name': 'Presupuesto de Producción',
                'verbose_name_plural': 'Presupuestos de Producción',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nombre del proveedor', max_length=200)),
                ('address', models.TextField(blank=True, help_text='Dirección completa')),
                ('phone_number', models.CharField(blank=True, help_text='Número de teléfono', max_length=20)),
                ('provider_type', models.CharField(choices=[('supplier', 'Proveedor'), ('workshop', 'Taller'), ('other', 'Otro')], help_text='Tipo de proveedor', max_length=20)),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name_en', models.CharField(help_text='English name (e.g., Units)', max_length=50)),
                ('name_es', models.CharField(help_text='Spanish name (e.g., Unidades)', max_length=50)),
                ('abbreviation', models.CharField(help_text='Unit abbreviation (e.g., un, m, kg)', max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Unidad',
                'verbose_name_plural': 'Unidades',
                'ordering': ['name_es'],
            },
        ),
        migrations.CreateModel(
            name='InputProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price_per_unit_cop', models.DecimalField(decimal_places=2, help_text='Precio por unidad en COP', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_preferred', models.BooleanField(default=False, help_text='Proveedor preferido para este insumo')),
                ('input', models.ForeignKey(help_text='Insumo', on_delete=django.db.models.deletion.CASCADE, related_name='input_providers', to='core.input')),
                ('provider', models.ForeignKey(help_text='Proveedor', on_delete=django.db.models.deletion.CASCADE, related_name='provider_inputs', to='core.provider')),
            ],
            options={
                'verbose_name': 'Insumo-Proveedor',
                'verbose_name_plural': 'Insumos-Proveedores',
                'ordering': ['input__name', 'provider__name'],
                'unique_together': {('input', 'provider')},
            },
        ),
        migrations.AddField(
            model_name='input',
            name='unit',
            field=models.ForeignKey(help_text='Unidad de medida', on_delete=django.db.models.deletion.PROTECT, to='core.unit'),
        ),
        migrations.CreateModel(
            name='AdditionalCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nombre del costo adicional', max_length=200)),
                ('value_cop', models.DecimalField(decimal_places=2, help_text='Valor en COP', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('end_product', models.ForeignKey(help_text='Producto final', on_delete=django.db.models.deletion.CASCADE, related_name='additional_costs', to='core.endproduct')),
            ],
            options={
                'verbose_name': 'Costo Adicional',
                'verbose_name_plural': 'Costos Adicionales',
                'ordering': ['end_product__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductionBudgetItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('planned_quantity', models.PositiveIntegerField(help_text='Cantidad planificada a producir', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_cost_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costo unitario en COP', max_digits=12)),
                ('total_cost_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costo total para esta línea en COP', max_digits=15)),
                ('end_product', models.ForeignKey(help_text='Producto final', on_delete=django.db.models.deletion.CASCADE, to='core.endproduct')),
                ('production_budget', models.ForeignKey(help_text='Presupuesto de producción', on_delete=django.db.models.deletion.CASCADE, related_name='budget_items', to='core.productionbudget')),
            ],
            options={
                'verbose_name': 'Item de Presupuesto',
                'verbose_name_plural': 'Items de Presupuesto',
                'ordering': ['production_budget__name', 'end_product__name'],
                'unique_together': {('production_budget', 'end_product')},
            },
        ),
        migrations.CreateModel(
            name='BOMItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Cantidad necesaria', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('line_cost_cop', models.DecimalField(decimal_places=2, default=0, help_text='Costo de línea calculado en COP', max_digits=12)),
                ('bom_template', models.ForeignKey(help_text='Plantilla BOM', on_delete=django.db.models.deletion.CASCADE, related_name='bom_items', to='core.bomtemplate')),
                ('input', models.ForeignKey(help_text='Insumo', on_delete=django.db.models.deletion.CASCADE, to='core.input')),
                ('input_provider', models.ForeignKey(help_text='Proveedor seleccionado para este insumo', on_delete=django.db.models.deletion.CASCADE, to='core.inputprovider')),
            ],
            options={
                'verbose_name': 'Item BOM',
                'verbose_name_plural': 'Items BOM',
                'ordering': ['bom_template__name', 'input__name'],
                'unique_together': {('bom_template', 'input')},
            },
        ),
    ]
