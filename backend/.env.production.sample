# Backend Production Configuration Template
# Copy this file to .env in the same directory for production deployment
# IMPORTANT: Replace all placeholder values before deploying

# Database Configuration (Production)
DB_HOST=db
POSTGRES_DB=plantex_production
POSTGRES_USER=plantex_prod_user
POSTGRES_PASSWORD=CHANGE_ME_SECURE_PRODUCTION_PASSWORD_MIN_16_CHARS

# Django Configuration (Production)
DEBUG=False
DJANGO_SECRET_KEY=CHANGE_ME_GENERATE_A_SECURE_50_PLUS_CHARACTER_RANDOM_SECRET_KEY

# Frontend Configuration (for CORS)
# Replace with your actual domain - should match BASE_DOMAIN in root .env
BASE_DOMAIN=yourdomain.com

# Email Configuration (Mailgun Production)
MAILGUN_API_KEY=CHANGE_ME_YOUR_REAL_MAILGUN_API_KEY
MAILGUN_SENDER_DOMAIN=CHANGE_ME_mg.yourdomain.com
FROM_EMAIL=CHANGE_ME_noreply@yourdomain.com

# Production Security Requirements:
# 1. DEBUG=False (CRITICAL - never set True in production)
# 2. Generate secure POSTGRES_PASSWORD (minimum 16 characters, use special chars)
# 3. Generate secure DJANGO_SECRET_KEY (minimum 50 characters, random)
# 4. Configure real Mailgun account and API key
# 5. Replace 'yourdomain.com' with your actual domain
# 6. Consider using environment variable injection for extra security
#
# Secret Key Generation:
# python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
#
# Password Generation:
# openssl rand -base64 32
#
# Production Checklist:
# [ ] All CHANGE_ME values replaced
# [ ] DEBUG=False
# [ ] Strong passwords generated
# [ ] Real domain configured (BASE_DOMAIN matches your actual domain)
# [ ] BASE_DOMAIN matches the same value in root .env file
# [ ] Mailgun account set up and tested
# [ ] Environment variables secured (not in version control)